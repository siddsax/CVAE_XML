run sample_x from CVAE_ML
python sample_x.py 100
It stores new x and new y in that folder itself
load it using 
x = np.load('datasets/new_x.npy')
y = np.load('datasets/new_y.npy')
x_o = np.load('datasets/Eurlex/ft_trn.npy')
y_o = np.load('datasets/Eurlex/label_trn.npy')
x_n = np.concatenate((x,x_o),axis=0)
y_n = np.concatenate((y,y_o),axis=0)

import scipy
from scipy.sparse import *
x_n_sp = csr_matrix(x_n)
y_n_sp = csr_matrix(y_n)
from scipy.io import savemat
savemat('../fastxml/manik/x_big', {'x_big':x_n_sp})
savemat('../fastxml/manik/y_big', {'y_big':y_n_sp})

# ---------------------------------------------------------------

In Matlab



[x, y] = read_data('../FastXML/orig_data/eurlex_train.txt');
cd '~/fastxml/manik/FastXML'
addpath('../Tools/matlab/')
addpath('../tools/')
A = .55;
B = 1.5;
params.num_thread = 1;
param.start_tree =0;
param.num_tree = 50;
param.bias = 1.0;
param.log_loss_coeff = 1.0;
param.lbl_per_leaf = 100;
param.max_leaf = 10;


load '../x_big'
load '../y_big'
fastXML_train(x_big, y_big, params, 'model_big')


[tx, ty] = read_data('../FastXML/orig_data/eurlex_test.txt');
[score_matrix] = fastXML_test(tx, params, 'model_big');
ip = inv_propensity(ty,A,B);
[metrics] = get_all_metrics(score_matrix , ty, ip)